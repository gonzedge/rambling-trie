module Rambling
  module Trie
    VERSION: String

    def self.create: [TValue < _Inspect] (?String?, ?Readers::Reader?) ?{ (Container[TValue]) -> void } -> Container[TValue]

    def self.load: [TValue < _Inspect] (String, ?Serializers::Serializer[Nodes::Node[TValue]]?) ?{ (Container[TValue]) -> void } -> Container[TValue]

    def self.dump: [TValue < _Inspect] (Container[TValue], String, ?Serializers::Serializer[Nodes::Node[TValue]]?) -> void

    def self.config: [TValue < _Inspect] ?{ (Configuration::Properties[TValue]) -> void } -> Configuration::Properties[TValue]

    private

    def self.properties: [TValue < _Inspect] -> Configuration::Properties[TValue]

    def self.readers: -> Configuration::ProviderCollection[Readers::Reader]

    def self.serializers: [TValue < _Inspect] -> Configuration::ProviderCollection[Serializers::Serializer[Nodes::Node[TValue]]]

    def self.compressor: [TValue < _Inspect] -> Compressor[TValue]

    def self.root_builder: [TValue < _Inspect] -> ^() -> Nodes::Node[TValue]
  end
end
