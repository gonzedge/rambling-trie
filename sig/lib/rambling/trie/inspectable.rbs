module Rambling
  module Trie
    module Inspectable[TValue < _Inspect]

      def inspect: -> String

      private

      def class_name: -> String?

      def attributes: -> String

      def letter_inspect: -> String

      def value_inspect: -> String?

      def terminal_inspect: -> String

      def children_inspect: -> String

      # abstract methods

      def letter: -> Symbol

      def value: -> TValue

      def terminal: -> bool?

      def children_tree: -> Hash[Symbol, Nodes::Node[TValue]]
    end
  end
end
