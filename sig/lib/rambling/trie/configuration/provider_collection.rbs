module Rambling
  module Trie
    module Configuration
      class ProviderCollection[TProvider < _Nilable]
        @providers: Hash[Symbol, TProvider]

        attr_reader name: Symbol
        attr_reader default: TProvider?

        def initialize: (Symbol, Hash[Symbol, TProvider], ?TProvider?) -> void

        def []: (Symbol) -> TProvider?

        def add: (Symbol, TProvider) -> TProvider

        def default=: (TProvider?) -> TProvider?

        def formats: -> Array[Symbol]

        def providers: -> Hash[Symbol, TProvider]

        def reset: -> void

        def resolve: (String) -> TProvider?

        private

        attr_reader configured_default: TProvider?
        attr_reader configured_providers: Hash[Symbol, TProvider]

        def []=: (Symbol, TProvider) -> TProvider

        def values: -> Array[TProvider]

        def file_format: (String) -> Symbol

        def contains?: (TProvider?) -> bool

        alias provider_instances values
      end
    end
  end
end
