module Rambling
  module Trie
    class Compressor[TValue < _Inspect]
      def compress: (Nodes::Node[TValue]?) -> Nodes::Compressed[TValue]?

      private

      def compress_only_child_and_merge: (Nodes::Node[TValue]) -> Nodes::Compressed[TValue]

      def merge: (Nodes::Node[TValue], Nodes::Node[TValue]) -> Nodes::Compressed[TValue]

      def compress_children_and_copy: (Nodes::Node[TValue]) -> Nodes::Compressed[TValue]

      def compress_children: (Hash[Symbol, Nodes::Node[TValue]]) -> Hash[Symbol, Nodes::Node[TValue]]
    end
  end
end
